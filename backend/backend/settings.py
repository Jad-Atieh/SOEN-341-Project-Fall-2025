"""
settings.py
---------
Django settings for the backend project.

Generated by 'django-admin startproject' using Django 5.2.7.
Official documentation:
- Settings overview: https://docs.djangoproject.com/en/5.2/topics/settings/
- Settings reference: https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
from dotenv import load_dotenv
import os

# Load environment variables from .env file (useful for sensitive data)
load_dotenv()

# -----------------------------------------------
# BASE PROJECT PATH
# -----------------------------------------------
BASE_DIR = Path(__file__).resolve().parent.parent

# -----------------------------------------------
# SECURITY SETTINGS
# -----------------------------------------------
SECRET_KEY = 'django-insecure-watgvyhl5_5p#wymz1fuwhyp^a$#+s-1k#-@x6dzyljv3b!v)&'  # ❗Replace with environment variable in production
DEBUG = True  # ❗Do NOT keep True in production
ALLOWED_HOSTS = ["*"]  # Allows all hosts; restrict this in production

# -----------------------------------------------
# REST FRAMEWORK CONFIGURATION
# -----------------------------------------------
REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',              # JSON output for APIs
        'rest_framework.renderers.BrowsableAPIRenderer',      # Django REST web interface
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',  # Enables web session login
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # Enables JWT auth
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',  # Require authentication by default
    ),
}

# -----------------------------------------------
# JWT (JSON Web Token) SETTINGS
# -----------------------------------------------
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30),  # Token valid for 30 minutes
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),     # Refresh token valid for 1 day
}

# -----------------------------------------------
# APPLICATIONS
# -----------------------------------------------
INSTALLED_APPS = [
    # Default Django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third-party apps
    "rest_framework",
    "corsheaders",

    # Custom app
    "api",
]

# -----------------------------------------------
# MIDDLEWARE
# -----------------------------------------------
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",  # Enables CORS (cross-origin requests)
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# -----------------------------------------------
# URL & WSGI CONFIGURATION
# -----------------------------------------------
ROOT_URLCONF = 'backend.urls'
WSGI_APPLICATION = 'backend.wsgi.application'

# -----------------------------------------------
# TEMPLATES
# -----------------------------------------------
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# -----------------------------------------------
# DATABASE CONFIGURATION (MySQL)
# -----------------------------------------------
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        'NAME': 'soen341',
        'USER': 'root',
        'PASSWORD': '',  # ❗Use environment variable in production
        'HOST': '127.0.0.1',
        'PORT': '3306',
        "OPTIONS": {"init_command": "SET sql_mode='STRICT_TRANS_TABLES'"},
    }
}

# -----------------------------------------------
# CUSTOM USER MODEL
# -----------------------------------------------
AUTH_USER_MODEL = 'api.User'

# -----------------------------------------------
# PASSWORD VALIDATION
# -----------------------------------------------
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# -----------------------------------------------
# INTERNATIONALIZATION
# -----------------------------------------------
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# -----------------------------------------------
# STATIC FILES (CSS, JS, IMAGES)
# -----------------------------------------------
STATIC_URL = 'static/'

# -----------------------------------------------
# DEFAULT AUTO FIELD
# -----------------------------------------------
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# -----------------------------------------------
# CORS (Cross-Origin Resource Sharing)
# -----------------------------------------------
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # React
    "http://127.0.0.1:5173",
]
CORS_ALLOW_ALL_ORIGINS = True  # Allow all origins (use cautiously)
CORS_ALLOW_CREDENTIALS = True  # Allow sending cookies/credentials across origins